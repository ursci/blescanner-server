{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/YusukeAbe/code/Anken/georepublic/blescanner-server/frontend/src/components/Header.tsx\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport { useState, Fragment } from \"react\";\nimport { AppBar, Drawer, Toolbar, Typography, makeStyles, Link } from \"@material-ui/core\";\nconst useStyle = makeStyles(theme => ({\n  mcrLogo: {\n    width: \"30px\",\n    height: \"30px\"\n  },\n  mcrLogoText: {\n    color: \"#f38827\",\n    font: \"Noto Sans JP\",\n    margin: theme.spacing(1),\n    flexGrow: 1\n  },\n  headerButton: {\n    margin: theme.spacing(1)\n  },\n  drawerHeader: _objectSpread({\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1)\n  }, theme.mixins.toolbar),\n  drawerHeaderText: {\n    color: \"#f38827\"\n  },\n  drawerLink: {\n    color: \"#0EA5CC\"\n  },\n  buttonBar: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\"\n    }\n  }\n}));\nexport const Header = () => {\n  const classes = useStyle();\n  const {\n    0: open,\n    1: setOpen\n  } = useState(false);\n\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(AppBar, {\n      color: \"default\",\n      position: \"fixed\",\n      children: /*#__PURE__*/_jsxDEV(Toolbar, {\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.mcrLogoText,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            style: {\n              textDecoration: \"none\",\n              color: \"#00bfff\",\n              fontWeight: \"bold\"\n            },\n            children: \"Blescanner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Drawer, {\n      title: \"My City Report\",\n      open: open,\n      onClose: () => setOpen(false),\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.drawerHeader,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          className: classes.drawerHeaderText,\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            href: \"/\",\n            style: {\n              textDecoration: \"none\",\n              color: \"#F38827\",\n              fontWeight: \"bold\"\n            },\n            children: \"My City Report\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};","map":{"version":3,"sources":["/Users/YusukeAbe/code/Anken/georepublic/blescanner-server/frontend/src/components/Header.tsx"],"names":["useState","Fragment","AppBar","Drawer","Toolbar","Typography","makeStyles","Link","useStyle","theme","mcrLogo","width","height","mcrLogoText","color","font","margin","spacing","flexGrow","headerButton","drawerHeader","display","alignItems","padding","mixins","toolbar","drawerHeaderText","drawerLink","buttonBar","breakpoints","down","Header","classes","open","setOpen","handleDrawerOpen","textDecoration","fontWeight"],"mappings":"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","sourcesContent":["import { FunctionComponent, useState, Fragment } from \"react\";\nimport {\n  AppBar,\n  Drawer,\n  Toolbar,\n  IconButton,\n  Typography,\n  makeStyles,\n  Link,\n} from \"@material-ui/core\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nconst useStyle = makeStyles((theme) => ({\n  mcrLogo: {\n    width: \"30px\",\n    height: \"30px\",\n  },\n  mcrLogoText: {\n    color: \"#f38827\",\n    font: \"Noto Sans JP\",\n    margin: theme.spacing(1),\n    flexGrow: 1,\n  },\n  headerButton: {\n    margin: theme.spacing(1),\n  },\n  drawerHeader: {\n    display: \"flex\",\n    alignItems: \"center\",\n    padding: theme.spacing(0, 1),\n    ...theme.mixins.toolbar,\n  },\n  drawerHeaderText: {\n    color: \"#f38827\",\n  },\n  drawerLink: {\n    color: \"#0EA5CC\",\n  },\n  buttonBar: {\n    [theme.breakpoints.down(\"xs\")]: {\n      display: \"none\",\n    },\n  },\n}));\n\nexport const Header: FunctionComponent = () => {\n  const classes = useStyle();\n  const [open, setOpen] = useState(false);\n\n  const handleDrawerOpen = (): void => {\n    setOpen(true);\n  };\n\n  return (\n    <Fragment>\n      <AppBar color=\"default\" position=\"fixed\">\n        <Toolbar>\n          <Typography variant=\"h6\" className={classes.mcrLogoText}>\n            <Link\n              href=\"/\"\n              style={{\n                textDecoration: \"none\",\n                color: \"#00bfff\",\n                fontWeight: \"bold\",\n              }}\n            >\n              Blescanner\n            </Link>\n          </Typography>\n        </Toolbar>\n      </AppBar>\n      <Drawer\n        title=\"My City Report\"\n        open={open}\n        onClose={(): void => setOpen(false)}\n      >\n        <div className={classes.drawerHeader}>\n          <Typography variant=\"h6\" className={classes.drawerHeaderText}>\n            <Link\n              href=\"/\"\n              style={{\n                textDecoration: \"none\",\n                color: \"#F38827\",\n                fontWeight: \"bold\",\n              }}\n            >\n              My City Report\n            </Link>\n          </Typography>\n        </div>\n      </Drawer>\n    </Fragment>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}